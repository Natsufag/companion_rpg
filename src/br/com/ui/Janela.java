/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ui;

import br.com.classes.Item;
import br.com.interfaces.Comparavel;
import br.com.io.ItemCRUD;
import java.awt.CardLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author gfreitash
 */
public class Janela extends javax.swing.JFrame {

    /**
     * Creates new form Janela
     */
    public Janela() {
        initComponents();
        customInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelPrincipal = new javax.swing.JPanel();
        homePanel = new javax.swing.JPanel();
        criarItemPanel = new javax.swing.JPanel();
        criarItemTituloLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        criarItemSalvarBotao = new javax.swing.JButton();
        criarItemNomeLabel = new javax.swing.JLabel();
        criarItemNomeTextField = new javax.swing.JTextField();
        criarItemValorTextField = new javax.swing.JTextField();
        criarItemValorLabel = new javax.swing.JLabel();
        criarItemTipoLabel = new javax.swing.JLabel();
        criarItemTipoComboBox = new javax.swing.JComboBox<>();
        criarItemMagicoCheckbox = new javax.swing.JCheckBox();
        criarItemDescricaoLabel = new javax.swing.JLabel();
        criarItemDescricaoScroolPane = new javax.swing.JScrollPane();
        criarItemDescricaoTextArea = new javax.swing.JTextArea();
        criarNpcPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        mostrarItensPanel = new javax.swing.JPanel();
        mostrarItensTituloLabel = new javax.swing.JLabel();
        mostrarItensTituloSeparator = new javax.swing.JSeparator();
        mostrarItensListaItensScrollpane = new javax.swing.JScrollPane();
        mostrarItensListaItensPanel = new javax.swing.JPanel();
        carregandoPanel = new javax.swing.JPanel();
        carregandoLabel = new javax.swing.JLabel();
        editarItemPanel = new javax.swing.JPanel();
        editarItemTituloLabel = new javax.swing.JLabel();
        editarItemTituloSeparator = new javax.swing.JSeparator();
        editarItemRodapeSeparator = new javax.swing.JSeparator();
        editarItemSalvarBotao = new javax.swing.JButton();
        editarItemNomeLabel = new javax.swing.JLabel();
        editarItemNomeTextField = new javax.swing.JTextField();
        editarItemValorTextField = new javax.swing.JTextField();
        editarItemValorLabel = new javax.swing.JLabel();
        editarItemTipoLabel = new javax.swing.JLabel();
        editarItemTipoComboBox = new javax.swing.JComboBox<>();
        editarItemMagicoCheckbox = new javax.swing.JCheckBox();
        editarItemDescricaoLabel = new javax.swing.JLabel();
        editarItemDescricaoScroolpane = new javax.swing.JScrollPane();
        editarItemDescricaoTextArea = new javax.swing.JTextArea();
        editarItemNomeOriginal = new javax.swing.JLabel();
        barraMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itensMenu = new javax.swing.JMenu();
        criarItemMenuItem = new javax.swing.JMenuItem();
        mostrarItensMenuItem = new javax.swing.JMenuItem();
        npcsMenu = new javax.swing.JMenu();
        criarNpcMenuItem = new javax.swing.JMenuItem();
        mostrarNpcsMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painelPrincipal.setEnabled(false);
        painelPrincipal.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 883, Short.MAX_VALUE)
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 439, Short.MAX_VALUE)
        );

        painelPrincipal.add(homePanel, "card4");

        criarItemTituloLabel.setFont(new java.awt.Font("Noto Serif Medium", 0, 36)); // NOI18N
        criarItemTituloLabel.setText("Criar Item");

        criarItemSalvarBotao.setText("Salvar");
        criarItemSalvarBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarItemSalvarBotaoActionPerformed(evt);
            }
        });

        criarItemNomeLabel.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        criarItemNomeLabel.setText("Nome");

        criarItemNomeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarItemNomeTextFieldActionPerformed(evt);
            }
        });

        criarItemValorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarItemValorTextFieldActionPerformed(evt);
            }
        });

        criarItemValorLabel.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        criarItemValorLabel.setText("Valor");

        criarItemTipoLabel.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        criarItemTipoLabel.setText("Tipo");

        criarItemTipoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarItemTipoComboBoxActionPerformed(evt);
            }
        });

        criarItemMagicoCheckbox.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        criarItemMagicoCheckbox.setText("É magico?");
        criarItemMagicoCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarItemMagicoCheckboxActionPerformed(evt);
            }
        });

        criarItemDescricaoLabel.setFont(new java.awt.Font("DejaVu Serif", 0, 18)); // NOI18N
        criarItemDescricaoLabel.setText("Descrição");

        criarItemDescricaoTextArea.setColumns(20);
        criarItemDescricaoTextArea.setLineWrap(true);
        criarItemDescricaoTextArea.setRows(5);
        criarItemDescricaoScroolPane.setViewportView(criarItemDescricaoTextArea);

        javax.swing.GroupLayout criarItemPanelLayout = new javax.swing.GroupLayout(criarItemPanel);
        criarItemPanel.setLayout(criarItemPanelLayout);
        criarItemPanelLayout.setHorizontalGroup(
            criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(criarItemPanelLayout.createSequentialGroup()
                .addGroup(criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(criarItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(criarItemPanelLayout.createSequentialGroup()
                                .addComponent(criarItemTituloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, criarItemPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(criarItemSalvarBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(criarItemPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(criarItemDescricaoScroolPane)
                            .addGroup(criarItemPanelLayout.createSequentialGroup()
                                .addGroup(criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(criarItemPanelLayout.createSequentialGroup()
                                        .addGroup(criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(criarItemNomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(criarItemNomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(criarItemValorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(criarItemValorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(criarItemTipoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(criarItemTipoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(criarItemMagicoCheckbox))
                                    .addComponent(criarItemDescricaoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 130, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        criarItemPanelLayout.setVerticalGroup(
            criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(criarItemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(criarItemTituloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(criarItemPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(criarItemPanelLayout.createSequentialGroup()
                                .addComponent(criarItemNomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(criarItemNomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, criarItemPanelLayout.createSequentialGroup()
                                .addComponent(criarItemTipoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))))
                    .addGroup(criarItemPanelLayout.createSequentialGroup()
                        .addComponent(criarItemValorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(criarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(criarItemValorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(criarItemTipoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(criarItemMagicoCheckbox))))
                .addGap(30, 30, 30)
                .addComponent(criarItemDescricaoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(criarItemDescricaoScroolPane, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(criarItemSalvarBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        painelPrincipal.add(criarItemPanel, "criarItemCard");

        jLabel1.setFont(new java.awt.Font("Noto Serif Medium", 0, 36)); // NOI18N
        jLabel1.setText("Criar NPC");

        javax.swing.GroupLayout criarNpcPanelLayout = new javax.swing.GroupLayout(criarNpcPanel);
        criarNpcPanel.setLayout(criarNpcPanelLayout);
        criarNpcPanelLayout.setHorizontalGroup(
            criarNpcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(criarNpcPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(577, Short.MAX_VALUE))
        );
        criarNpcPanelLayout.setVerticalGroup(
            criarNpcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(criarNpcPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(391, Short.MAX_VALUE))
        );

        painelPrincipal.add(criarNpcPanel, "criarNpcCard");

        mostrarItensTituloLabel.setFont(new java.awt.Font("Noto Serif Medium", 0, 36)); // NOI18N
        mostrarItensTituloLabel.setText("Itens");

        javax.swing.GroupLayout mostrarItensListaItensPanelLayout = new javax.swing.GroupLayout(mostrarItensListaItensPanel);
        mostrarItensListaItensPanel.setLayout(mostrarItensListaItensPanelLayout);
        mostrarItensListaItensPanelLayout.setHorizontalGroup(
            mostrarItensListaItensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 862, Short.MAX_VALUE)
        );
        mostrarItensListaItensPanelLayout.setVerticalGroup(
            mostrarItensListaItensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );

        mostrarItensListaItensScrollpane.setViewportView(mostrarItensListaItensPanel);

        javax.swing.GroupLayout mostrarItensPanelLayout = new javax.swing.GroupLayout(mostrarItensPanel);
        mostrarItensPanel.setLayout(mostrarItensPanelLayout);
        mostrarItensPanelLayout.setHorizontalGroup(
            mostrarItensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mostrarItensPanelLayout.createSequentialGroup()
                .addGroup(mostrarItensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mostrarItensPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mostrarItensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mostrarItensPanelLayout.createSequentialGroup()
                                .addComponent(mostrarItensTituloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(mostrarItensTituloSeparator, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(mostrarItensPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(mostrarItensListaItensScrollpane)))
                .addContainerGap())
        );
        mostrarItensPanelLayout.setVerticalGroup(
            mostrarItensPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mostrarItensPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mostrarItensTituloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mostrarItensTituloSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mostrarItensListaItensScrollpane)
                .addContainerGap())
        );

        painelPrincipal.add(mostrarItensPanel, "mostrarItensCard");

        carregandoLabel.setFont(new java.awt.Font("DejaVu Serif", 1, 72)); // NOI18N
        carregandoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        carregandoLabel.setText("Carregando...");

        javax.swing.GroupLayout carregandoPanelLayout = new javax.swing.GroupLayout(carregandoPanel);
        carregandoPanel.setLayout(carregandoPanelLayout);
        carregandoPanelLayout.setHorizontalGroup(
            carregandoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(carregandoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(carregandoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                .addContainerGap())
        );
        carregandoPanelLayout.setVerticalGroup(
            carregandoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(carregandoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(carregandoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelPrincipal.add(carregandoPanel, "carregandoCard");

        editarItemTituloLabel.setFont(new java.awt.Font("Noto Serif Medium", 0, 36)); // NOI18N
        editarItemTituloLabel.setText("Editar Item");

        editarItemSalvarBotao.setText("Salvar");
        editarItemSalvarBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarItemSalvarBotaoActionPerformed(evt);
            }
        });

        editarItemNomeLabel.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        editarItemNomeLabel.setText("Nome");

        editarItemNomeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarItemNomeTextFieldActionPerformed(evt);
            }
        });

        editarItemValorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarItemValorTextFieldActionPerformed(evt);
            }
        });

        editarItemValorLabel.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        editarItemValorLabel.setText("Valor");

        editarItemTipoLabel.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        editarItemTipoLabel.setText("Tipo");

        editarItemTipoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarItemTipoComboBoxActionPerformed(evt);
            }
        });

        editarItemMagicoCheckbox.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        editarItemMagicoCheckbox.setText("É magico?");
        editarItemMagicoCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarItemMagicoCheckboxActionPerformed(evt);
            }
        });

        editarItemDescricaoLabel.setFont(new java.awt.Font("DejaVu Serif", 0, 18)); // NOI18N
        editarItemDescricaoLabel.setText("Descrição");

        editarItemDescricaoTextArea.setColumns(20);
        editarItemDescricaoTextArea.setLineWrap(true);
        editarItemDescricaoTextArea.setRows(5);
        editarItemDescricaoScroolpane.setViewportView(editarItemDescricaoTextArea);

        editarItemNomeOriginal.setText("jLabel2");
        editarItemNomeOriginal.setEnabled(false);

        javax.swing.GroupLayout editarItemPanelLayout = new javax.swing.GroupLayout(editarItemPanel);
        editarItemPanel.setLayout(editarItemPanelLayout);
        editarItemPanelLayout.setHorizontalGroup(
            editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editarItemPanelLayout.createSequentialGroup()
                .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editarItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editarItemPanelLayout.createSequentialGroup()
                                .addComponent(editarItemTituloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editarItemNomeOriginal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(editarItemTituloSeparator, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(editarItemRodapeSeparator)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editarItemPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(editarItemSalvarBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(editarItemPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editarItemDescricaoScroolpane)
                            .addGroup(editarItemPanelLayout.createSequentialGroup()
                                .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(editarItemPanelLayout.createSequentialGroup()
                                        .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(editarItemNomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(editarItemNomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(editarItemValorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(editarItemValorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(editarItemTipoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(editarItemTipoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(editarItemMagicoCheckbox))
                                    .addComponent(editarItemDescricaoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 130, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        editarItemPanelLayout.setVerticalGroup(
            editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editarItemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editarItemTituloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarItemNomeOriginal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(editarItemPanelLayout.createSequentialGroup()
                        .addComponent(editarItemTituloSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editarItemPanelLayout.createSequentialGroup()
                                .addComponent(editarItemNomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editarItemNomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editarItemPanelLayout.createSequentialGroup()
                                .addComponent(editarItemTipoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))))
                    .addGroup(editarItemPanelLayout.createSequentialGroup()
                        .addComponent(editarItemValorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editarItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editarItemValorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editarItemTipoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editarItemMagicoCheckbox))))
                .addGap(30, 30, 30)
                .addComponent(editarItemDescricaoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editarItemDescricaoScroolpane, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(editarItemRodapeSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editarItemSalvarBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        painelPrincipal.add(editarItemPanel, "editarItemCard");

        jMenu1.setText("File");
        barraMenu.add(jMenu1);

        itensMenu.setText("Itens");

        criarItemMenuItem.setText("Criar Item");
        criarItemMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarItemMenuItemActionPerformed(evt);
            }
        });
        itensMenu.add(criarItemMenuItem);

        mostrarItensMenuItem.setText("Mostrar Itens");
        mostrarItensMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarItensMenuItemActionPerformed(evt);
            }
        });
        itensMenu.add(mostrarItensMenuItem);

        barraMenu.add(itensMenu);

        npcsMenu.setText("NPC");

        criarNpcMenuItem.setText("Criar NPC");
        npcsMenu.add(criarNpcMenuItem);

        mostrarNpcsMenuItem.setText("Mostrar NPCs");
        mostrarNpcsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarNpcsMenuItemActionPerformed(evt);
            }
        });
        npcsMenu.add(mostrarNpcsMenuItem);

        barraMenu.add(npcsMenu);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mostrarNpcsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarNpcsMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mostrarNpcsMenuItemActionPerformed

    private void criarItemNomeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarItemNomeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_criarItemNomeTextFieldActionPerformed

    private void criarItemValorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarItemValorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_criarItemValorTextFieldActionPerformed

    private void criarItemMagicoCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarItemMagicoCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_criarItemMagicoCheckboxActionPerformed

    private void criarItemMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarItemMenuItemActionPerformed
        CardLayout cl = (CardLayout) painelPrincipal.getLayout();
        cl.show(painelPrincipal, "criarItemCard");
    }//GEN-LAST:event_criarItemMenuItemActionPerformed

    private void criarItemTipoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarItemTipoComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_criarItemTipoComboBoxActionPerformed

    private void criarItemSalvarBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarItemSalvarBotaoActionPerformed
        double valor;
        String nome, descricao, tipo;
        boolean isMagico;
        try {
            valor = Double.parseDouble(criarItemValorTextField.getText());
            
            nome = criarItemNomeTextField.getText();
            descricao = criarItemDescricaoTextArea.getText();
            tipo = criarItemTipoComboBox.getSelectedItem().toString();
            if("".equals(nome) || "".equals(descricao) || "".equals(tipo)) throw new NullPointerException();
            
            isMagico = criarItemMagicoCheckbox.isSelected();
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "O campo valor aceita apenas valores numéricos", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        } catch(NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Há campos vazios. Por favor, preencha todos os campos", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Item item = new Item(nome, descricao, valor, Item.TIPO.valueOf(tipo), isMagico);
        ItemCRUD itemCrud = new ItemCRUD(ItemCRUD.ITENS);
        if(itemCrud.salvar(item)) {
            JOptionPane.showMessageDialog(null, "O item foi salvo com sucesso", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            criarItemNomeTextField.setText("");
            criarItemValorTextField.setText("");
            criarItemTipoComboBox.setSelectedIndex(0);
            criarItemDescricaoTextArea.setText("");
            criarItemMagicoCheckbox.setSelected(false);
        } else if(itemCrud.obter(Comparavel.transformarIdentificador(nome)) != null) {
            JOptionPane.showMessageDialog(null, "Não foi possível salvar o item.\nJá existe um item com esse nome.", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível salvar o item", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_criarItemSalvarBotaoActionPerformed

    private void mostrarItensMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarItensMenuItemActionPerformed
        CardLayout cl = (CardLayout) painelPrincipal.getLayout();
        cl.show(painelPrincipal, "carregandoCard");
        mostrarItens();
        cl.show(painelPrincipal, "mostrarItensCard");
    }//GEN-LAST:event_mostrarItensMenuItemActionPerformed

    private void editarItemSalvarBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarItemSalvarBotaoActionPerformed
        double valor;
        String nome, descricao, tipo;
        boolean isMagico;
        try {
            valor = Double.parseDouble(editarItemValorTextField.getText());
            isMagico = editarItemMagicoCheckbox.isSelected();
            
            nome = editarItemNomeTextField.getText();
            descricao = editarItemDescricaoTextArea.getText();
            tipo = editarItemTipoComboBox.getSelectedItem().toString();
            if("".equals(nome) || "".equals(descricao) || "".equals(tipo)) throw new NullPointerException();
            
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "O campo valor aceita apenas valores numéricos", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        } catch(NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Há campos vazios. Por favor, preencha todos os campos", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Item item = new Item(nome, descricao, valor, Item.TIPO.valueOf(tipo), isMagico);
        ItemCRUD itemCrud = new ItemCRUD(ItemCRUD.ITENS);
        if(itemCrud.editar(editarItemNomeOriginal.getText(),item)) {
            JOptionPane.showMessageDialog(null, "O item foi salvo com sucesso", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            this.mostrarItensMenuItemActionPerformed(null);
        } else if(itemCrud.obter(Comparavel.transformarIdentificador(nome)) != null) {
            JOptionPane.showMessageDialog(null, "Não foi possível salvar o item.\nJá existe um item com esse nome.", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível salvar o item", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editarItemSalvarBotaoActionPerformed

    private void editarItemNomeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarItemNomeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editarItemNomeTextFieldActionPerformed

    private void editarItemValorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarItemValorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editarItemValorTextFieldActionPerformed

    private void editarItemTipoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarItemTipoComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editarItemTipoComboBoxActionPerformed

    private void editarItemMagicoCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarItemMagicoCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editarItemMagicoCheckboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Janela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JLabel carregandoLabel;
    private javax.swing.JPanel carregandoPanel;
    private javax.swing.JLabel criarItemDescricaoLabel;
    private javax.swing.JScrollPane criarItemDescricaoScroolPane;
    private javax.swing.JTextArea criarItemDescricaoTextArea;
    private javax.swing.JCheckBox criarItemMagicoCheckbox;
    private javax.swing.JMenuItem criarItemMenuItem;
    private javax.swing.JLabel criarItemNomeLabel;
    private javax.swing.JTextField criarItemNomeTextField;
    private javax.swing.JPanel criarItemPanel;
    private javax.swing.JButton criarItemSalvarBotao;
    private javax.swing.JComboBox<String> criarItemTipoComboBox;
    private javax.swing.JLabel criarItemTipoLabel;
    private javax.swing.JLabel criarItemTituloLabel;
    private javax.swing.JLabel criarItemValorLabel;
    private javax.swing.JTextField criarItemValorTextField;
    private javax.swing.JMenuItem criarNpcMenuItem;
    private javax.swing.JPanel criarNpcPanel;
    private javax.swing.JLabel editarItemDescricaoLabel;
    private javax.swing.JScrollPane editarItemDescricaoScroolpane;
    private javax.swing.JTextArea editarItemDescricaoTextArea;
    private javax.swing.JCheckBox editarItemMagicoCheckbox;
    private javax.swing.JLabel editarItemNomeLabel;
    private javax.swing.JLabel editarItemNomeOriginal;
    private javax.swing.JTextField editarItemNomeTextField;
    private javax.swing.JPanel editarItemPanel;
    private javax.swing.JSeparator editarItemRodapeSeparator;
    private javax.swing.JButton editarItemSalvarBotao;
    private javax.swing.JComboBox<String> editarItemTipoComboBox;
    private javax.swing.JLabel editarItemTipoLabel;
    private javax.swing.JLabel editarItemTituloLabel;
    private javax.swing.JSeparator editarItemTituloSeparator;
    private javax.swing.JLabel editarItemValorLabel;
    private javax.swing.JTextField editarItemValorTextField;
    private javax.swing.JPanel homePanel;
    private javax.swing.JMenu itensMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel mostrarItensListaItensPanel;
    private javax.swing.JScrollPane mostrarItensListaItensScrollpane;
    private javax.swing.JMenuItem mostrarItensMenuItem;
    private javax.swing.JPanel mostrarItensPanel;
    private javax.swing.JLabel mostrarItensTituloLabel;
    private javax.swing.JSeparator mostrarItensTituloSeparator;
    private javax.swing.JMenuItem mostrarNpcsMenuItem;
    private javax.swing.JMenu npcsMenu;
    private javax.swing.JPanel painelPrincipal;
    // End of variables declaration//GEN-END:variables

    private void customInitComponents() {
        //Tipos de item
        for(Item.TIPO tipo: Item.TIPO.values()){
            criarItemTipoComboBox.addItem(tipo.toString());
            editarItemTipoComboBox.addItem(tipo.toString());
        }
    }

    private void mostrarItens() {
        mostrarItensListaItensPanel.setLayout(new GridBagLayout());
        mostrarItensListaItensPanel.removeAll();
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);
        
        ItemCRUD itemCRUD = new ItemCRUD(ItemCRUD.ITENS);
        List<Item> itens = itemCRUD.obterTodos();
        
        for(int i = 0, count = 0; count < itens.size(); i++) {
            for(int j = 0; j < 2 && count < itens.size(); j++, count++) {
                final Item item = itens.get(count);
                
                DisplayItem displayItem = new DisplayItem(item);
                displayItem.setBotaoEditarActionPerformed(() -> this.editarItem(item));
                displayItem.setBotaoRemoverActionPerformed(() -> this.removerItem(item));
                
                gbc.gridx = j;
                gbc.gridy = i;
                mostrarItensListaItensPanel.add(displayItem, gbc);
            }
        }
    }
    
    private void editarItem(Item item) {
        CardLayout cl = (CardLayout) painelPrincipal.getLayout();
        
        editarItemNomeTextField.setText(item.getNome());
        editarItemValorTextField.setText(Double.toString(item.getValor()));
        editarItemTipoComboBox.setSelectedIndex(0);
        editarItemMagicoCheckbox.setSelected(item.isMagico());
        editarItemDescricaoTextArea.setText(item.getDescricao());
        editarItemNomeOriginal.setText(item.getNome());
        editarItemNomeOriginal.setVisible(false);
        
        cl.show(painelPrincipal, "editarItemCard");
    }

    private void removerItem(Item item) {
        int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o item \"" + item.getNome() + "\"?", "",
                JOptionPane.YES_NO_OPTION);
        
        if(resposta != 0) {return;}
        
        ItemCRUD itemCRUD = new ItemCRUD(ItemCRUD.ITENS);
        if(itemCRUD.deletar(Comparavel.transformarIdentificador(item.getNome()))) {
            JOptionPane.showMessageDialog(null, "O item foi deletado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            this.mostrarItensMenuItemActionPerformed(null);
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível deletar o item.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
}
